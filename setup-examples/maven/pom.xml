<?xml version="1.0" encoding="UTF-8"?>
<!--

    Jakarta Validation TCK

    License: Apache License, Version 2.0
    See the license.txt file in the root directory or <http://www.apache.org/licenses/LICENSE-2.0>.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.eclipse.ee4j</groupId>
        <artifactId>project</artifactId>
        <version>2.0.0-M1</version>
    </parent>

    <!-- The tck.version variable reference seen in the source is a property that is replaced by the
    distribution build to match the validation-tck distribution version. It will not be seen in
    the distribution build.
     -->
    <groupId>jakarta.validation</groupId>
    <artifactId>tck-runner</artifactId>
    <version>${tck.version}</version>

    <name>Example Jakarta Validation TCK Runner</name>
    <description>Aggregates dependencies and runs the Jakarta Validation TCK</description>

    <properties>
        <tck.suite.file>target/dependency/validation-tck-tests-suite.xml</tck.suite.file>
        <arquillian.version>1.8.0.Final</arquillian.version>

        <version.jakarta.validation-api>4.0.0-SNAPSHOT</version.jakarta.validation-api>
        <hibernate.validator.version>10.0.0-SNAPSHOT</hibernate.validator.version>
        <bval.version>3.0.2</bval.version>
        <version.wildfly>37.0.1.Final</version.wildfly>
        <version.org.apache.groovy>5.0.1</version.org.apache.groovy>
        <version.org.wildfly.arquillian>5.1.0.Beta9</version.org.wildfly.arquillian>

        <validation.provider>org.hibernate.validator.HibernateValidator</validation.provider>

        <wildfly.distribution.name>wildfly-preview</wildfly.distribution.name>
        <wildfly.target-dir>${project.build.directory}/wildfly-patched/${wildfly.distribution.name}-${version.wildfly}</wildfly.target-dir>
        <wildfly.actual.target-dir>${wildfly.target-dir}</wildfly.actual.target-dir>
        <wildfly.modules-dir>${wildfly.actual.target-dir}/modules/system/layers/base</wildfly.modules-dir>
        <remote.debug />
        <arquillian.wildfly.jvm.args>-Duser.language=en -Duser.country=US</arquillian.wildfly.jvm.args>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>7.11.0</version>
        </dependency>
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>validation-tck-tests</artifactId>
            <version>${tck.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.testng</groupId>
            <artifactId>arquillian-testng-container</artifactId>
            <version>${arquillian.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <testResources>
            <testResource>
                <filtering>true</filtering>
                <directory>src/test/resources</directory>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.2</version>
            </plugin>
            <!-- We are using the dependency plugin to download and install the TestNG suite file locally -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.8.1</version>
                <executions>
                    <execution>
                        <id>copy-tck-test-suite-file</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <stripVersion>true</stripVersion>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>jakarta.validation</groupId>
                                    <artifactId>validation-tck-tests</artifactId>
                                    <type>xml</type>
                                    <classifier>suite</classifier>
                                    <overWrite>false</overWrite>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>3.2.5</version>
                <executions>
                    <execution>
                        <id>generate-test-report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report-only</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <outputDirectory>target/surefire-reports</outputDirectory>
                    <outputName>test-report</outputName>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>in-container-test</id>
            <dependencies>
                <dependency>
                    <groupId>org.wildfly.arquillian</groupId>
                    <artifactId>wildfly-arquillian-container-managed</artifactId>
                    <version>${version.org.wildfly.arquillian}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>3.2.5</version>
                        <configuration>
                            <argLine>-Xmx1024m</argLine>
                            <forkCount>1</forkCount>
                            <suiteXmlFiles>
                                <suiteXmlFile>${tck.suite.file}</suiteXmlFile>
                            </suiteXmlFiles>
                            <systemPropertyVariables>
                                <validation.provider>${validation.provider}</validation.provider>
                                <arquillian.launch>incontainer</arquillian.launch>
                                <jbossHome>${container.home}</jbossHome>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>prepare-server</id>
            <dependencies>
                <dependency>
                    <groupId>org.hibernate.validator</groupId>
                    <artifactId>hibernate-validator</artifactId>
                    <version>${hibernate.validator.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.hibernate.validator</groupId>
                    <artifactId>hibernate-validator-cdi</artifactId>
                    <version>${hibernate.validator.version}</version>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack-wildfly</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <skip>${skip.wildfly.patch.unpack.server}</skip>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.wildfly</groupId>
                                            <artifactId>${wildfly.distribution.name}-dist</artifactId>
                                            <version>${version.wildfly}</version>
                                            <type>tar.gz</type>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${project.build.directory}/wildfly-patched</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                            <!-- Update the BV/HV JARs in the unpacked ^ WF copy -->
                            <execution>
                                <id>prepare-patch-jars</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <skip>${skip.wildfly.patch.hibernate.validator}</skip>
                                    <artifactItems>
                                        <!-- WildFly current -->
                                        <artifactItem>
                                            <groupId>jakarta.validation</groupId>
                                            <artifactId>jakarta.validation-api</artifactId>
                                            <version>${version.jakarta.validation-api}</version>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${wildfly.actual.target-dir}/modules/system/layers/base/jakarta/validation/api/main</outputDirectory>
                                            <destFileName>jakarta.validation-api-${version.jakarta.validation-api}.jar</destFileName>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>org.hibernate.validator</groupId>
                                            <artifactId>hibernate-validator</artifactId>
                                            <version>${hibernate.validator.version}</version>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${wildfly.actual.target-dir}/modules/system/layers/base/org/hibernate/validator/main</outputDirectory>
                                            <destFileName>hibernate-validator-${hibernate.validator.version}.jar</destFileName>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>org.hibernate.validator</groupId>
                                            <artifactId>hibernate-validator-cdi</artifactId>
                                            <version>${hibernate.validator.version}</version>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${wildfly.actual.target-dir}/modules/system/layers/base/org/hibernate/validator/cdi/main</outputDirectory>
                                            <destFileName>hibernate-validator-cdi-${hibernate.validator.version}.jar</destFileName>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.gmavenplus</groupId>
                        <artifactId>gmavenplus-plugin</artifactId>
                        <version>4.2.1</version>
                        <dependencies>
                            <dependency>
                                <groupId>org.apache.groovy</groupId>
                                <artifactId>groovy</artifactId>
                                <version>${version.org.apache.groovy}</version>
                                <scope>runtime</scope>
                            </dependency>
                            <dependency>
                                <groupId>org.apache.groovy</groupId>
                                <artifactId>groovy-ant</artifactId>
                                <version>${version.org.apache.groovy}</version>
                                <scope>runtime</scope>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <id>update-wildfly-current-modules</id>
                                <phase>process-sources</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <scripts>
                                        <script><![CDATA[
                                            println "[INFO] ------------------------------------------------------------------------";
                                            println "[INFO] UPDATING BEAN VALIDATION RELATED WILDFLY MODULES                        ";
                                            println "[INFO] ------------------------------------------------------------------------";

                                            def processFileInplace(File file, Closure processText) {
                                                def text = file.text
                                                file.write( processText( text ) )
                                            }

                                            def deleteFiles(List<String> filePaths) {
                                                for ( String filePath : filePaths ) {
                                                    new File( filePath ).delete();
                                                }
                                            }

                                            def appendDependency(File file, String dependencyToAppend, boolean optional) {
                                                file.write( file.text.replaceAll( /<\/dependencies>/, '  <module name="' + dependencyToAppend + '"' + ( optional ? ' optional="true"' : '' ) + '/>\n  </dependencies>' ) )
                                            }

                                            def removeDependency(File file, String dependencyToRemove) {
                                                file.write( file.text.replaceAll( /<module name="${dependencyToRemove}"[^\/]*\/>/, '' ) )
                                            }

                                            // Jakarta Validation API
                                            bvModuleXml = new File( wildflyPatchedTargetDir, 'modules/system/layers/base/jakarta/validation/api/main/module.xml' )
                                            def bvArtifactName = 'jakarta.validation-api-' + project.properties['version.jakarta.validation-api'] + '.jar';
                                            println "[INFO] Using Jakarta Validation version " + bvArtifactName;
                                            processFileInplace( bvModuleXml ) { text ->
                                                text.replaceAll( /<resource-root path=".*validation-api.*jar/, '<resource-root path="' + bvArtifactName )
                                            }

                                            deleteFiles( new FileNameByRegexFinder().getFileNames( wildflyPatchedTargetDir + '/modules/system/layers/base/jakarta/validation/api/main', '.*\\.jar' ) )

                                            // HV
                                            hvModuleXml = new File( wildflyPatchedTargetDir, 'modules/system/layers/base/org/hibernate/validator/main/module.xml' )
                                            def hvArtifactName = 'hibernate-validator-' + project.properties['hibernate.validator.version'] + '.jar';
                                            println "[INFO] Using HV version " + hvArtifactName;
                                            processFileInplace( hvModuleXml ) { text ->
                                                text.replaceAll( /hibernate-validator.*jar/, hvArtifactName )
                                            }

                                            removeDependency( hvModuleXml, "org.apache.xerces" )
                                            appendDependency( hvModuleXml, "javax.xml.stream.api", false )
                                            appendDependency( hvModuleXml, "javax.api", false )

                                            appendDependency( hvModuleXml, "javax.money.api", true )
                                            appendDependency( hvModuleXml, "javafx.api", true )

                                            deleteFiles( new FileNameByRegexFinder().getFileNames( wildflyPatchedTargetDir + '/modules/system/layers/base/org/hibernate/validator/main', 'hibernate-validator-.*\\.jar' ) )

                                            // HV CDI
                                            hvCdiModuleXml = new File( wildflyPatchedTargetDir, 'modules/system/layers/base/org/hibernate/validator/cdi/main/module.xml' )
                                            def hvCdiArtifactName = 'hibernate-validator-cdi-' + project.properties['hibernate.validator.version'] + '.jar';
                                            println "[INFO] Using HV CDI Portable Extension version " + hvCdiArtifactName;
                                            processFileInplace( hvCdiModuleXml ) { text ->
                                                text.replaceAll( /hibernate-validator-cdi.*jar/, hvCdiArtifactName )
                                            }

                                            deleteFiles( new FileNameByRegexFinder().getFileNames( wildflyPatchedTargetDir + '/modules/system/layers/base/org/hibernate/validator/cdi/main', 'hibernate-validator-cdi-.*\\.jar' ) )

                                            println "[INFO] ------------------------------------------------------------------------";
                                          ]]></script>
                                    </scripts>
                                    <properties>
                                        <wildflyPatchedTargetDir>${wildfly.actual.target-dir}</wildflyPatchedTargetDir>
                                        <jbossLoggingVersion>${version.org.jboss.logging.jboss-logging}</jbossLoggingVersion>
                                    </properties>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
